// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Au10tixPassiveFaceLivenessUI
import Au10tixBaseUI
import Au10tixCore
import Au10tixPassiveFaceLivenessKit
@_exported import Au10tixPassiveFaceLivenessUI
import Foundation
import Swift
import UIKit
@_inheritsConvenienceInitializers @objc(Au10xPFLViewController) @_objcRuntimeName(Au10xPFLViewController) final public class PFLViewController : Au10tixBaseUI.UIComponentBaseViewController {
  final public var showCaptureButton: Swift.Bool {
    get
    set
  }
  override final public var headline: Swift.String {
    get
  }
  weak final public var pflDelegate: Au10tixPassiveFaceLivenessKit.PFLSessionDelegate?
  @objc override final public func viewDidLoad()
  @objc override final public func viewWillAppear(_ animated: Swift.Bool)
  override final public func showFeatureFeed()
  @objc override final public func mainButtonAction()
  @objc override final public func leftButtonAction()
  override final public func handle(state: Au10tixBaseUI.UIComponentBaseViewController.UIState)
  override final public func displayTimeoutUI(_ shouldDisplayTimeout: Swift.Bool)
  @objc deinit
  @objc required public init(configs: Au10tixBaseUI.UIComponentConfigs, navigationDelegate: Au10tixBaseUI.UIComponentViewControllerNavigationDelegate)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension PFLViewController : Au10tixPassiveFaceLivenessKit.PFLSessionDelegate {
  final public func pflSession(_ pflSession: Au10tixPassiveFaceLivenessKit.PFLSession, didCapture image: Foundation.Data, faceBoundingBox: CoreGraphics.CGRect?)
  final public func pflSession(_ pflSession: Au10tixPassiveFaceLivenessKit.PFLSession, didRecieve qualityFeedback: Au10tixPassiveFaceLivenessKit.QualityFaultOptions)
  final public func pflSession(_ pflSession: Au10tixPassiveFaceLivenessKit.PFLSession, didConcludeWith result: Au10tixPassiveFaceLivenessKit.PFLResponse, for image: Foundation.Data)
  final public func pflSession(_ pflSession: Au10tixPassiveFaceLivenessKit.PFLSession, didPassProbabilityThresholdFor image: Foundation.Data)
  final public func pflSession(_ pflSession: Au10tixPassiveFaceLivenessKit.PFLSession, didFailWith error: Au10tixPassiveFaceLivenessKit.PFLSessionError)
}
